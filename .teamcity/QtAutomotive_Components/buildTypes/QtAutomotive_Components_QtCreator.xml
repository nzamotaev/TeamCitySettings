<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="c0c17cd7-1a93-487c-845c-aff67e2e3586" xsi:noNamespaceSchemaLocation="http://www.jetbrains.com/teamcity/schemas/10.0/project-config.xsd">
  <name>Qt Creator</name>
  <description />
  <settings>
    <options>
      <option name="artifactRules" value="+:%system.teamcity.build.tempDir%/_install_/ =&gt; qtcreator.tar.gz" />
    </options>
    <disabled-settings>
      <setting-ref ref="RUNNER_92" />
      <setting-ref ref="RUNNER_93" />
      <setting-ref ref="RUNNER_94" />
      <setting-ref ref="RUNNER_95" />
    </disabled-settings>
    <parameters />
    <build-runners>
      <runner id="RUNNER_92" name="" type="simpleRunner">
        <parameters>
          <param name="script.content" value="qmake -r" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_93" name="" type="jetbrains-cmake-gnumake">
        <parameters>
          <param name="teamcity.step.mode" value="default" />
        </parameters>
      </runner>
      <runner id="RUNNER_95" name="New build step" type="jetbrains-cmake-gnumake">
        <parameters>
          <param name="teamcity.step.mode" value="default" />
          <param name="ui-jetbrains-cmake-gnumake-additional-cmd-params" value="INSTALL_ROOT=%system.teamcity.build.tempDir%/install" />
          <param name="ui-jetbrains-cmake-gnumake-make-tasks" value="install" />
        </parameters>
      </runner>
      <runner id="RUNNER_94" name="" type="simpleRunner">
        <parameters>
          <param name="script.content" value="mkdir -p %system.teamcity.build.tempDir%/install/" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_105" name="Docker" type="simpleRunner">
        <parameters>
          <param name="script.content" value="./run.sh %system.teamcity.build.tempDir% `pwd`/../../../../ %teamcity.build.vcs.branch.QtAutomotive_Components_CodeQtIoQtCreatorQtCreatorGit%" />
          <param name="teamcity.build.workingDir" value="Docker/QtAutomotive/Components/QtCreator" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="QtAutomotive_Components_CodeQtIoQtCreatorQtCreatorGit">
        <checkout-rule rule="+:.=&gt;sources" />
      </vcs-entry-ref>
      <vcs-entry-ref root-id="GithubComNzamotaevTeamCityDockerScriptsGit">
        <checkout-rule rule="+:. =&gt; Docker" />
      </vcs-entry-ref>
    </vcs-settings>
    <requirements>
      <equals id="RQ_57" name="teamcity.agent.jvm.os.arch" value="amd64" />
      <equals id="RQ_58" name="system.ubuntu.version" value="16.04" />
    </requirements>
    <build-triggers />
    <build-extensions>
      <extension id="swabra" type="swabra">
        <parameters>
          <param name="swabra.enabled" value="swabra.before.build" />
          <param name="swabra.processes" value="report" />
          <param name="swabra.strict" value="true" />
        </parameters>
      </extension>
      <extension id="perfmon" type="perfmon">
        <parameters />
      </extension>
      <extension id="BUILD_EXT_43" type="BuildFailureOnMetric">
        <parameters>
          <param name="anchorBuild" value="lastSuccessful" />
          <param name="metricKey" value="VisibleArtifactsSize" />
          <param name="metricThreshold" value="1000000" />
          <param name="metricUnits" value="metricUnitsDefault" />
          <param name="moreOrLess" value="less" />
          <param name="withBuildAnchor" value="false" />
        </parameters>
      </extension>
    </build-extensions>
    <artifact-dependencies>
      <dependency id="ARTIFACT_DEPENDENCY_10" sourceBuildTypeId="QtAutomotive_Components_Qt5" cleanDestination="true">
        <revisionRule name="sameChainOrLastFinished" revision="latest.sameChainOrLastFinished" />
        <artifact sourcePath="+:qt.tar.gz =&gt; Docker/QtAutomotive/Components/QtCreator/qt/" />
      </dependency>
    </artifact-dependencies>
    <dependencies>
      <depend-on sourceBuildTypeId="QtAutomotive_Components_Qt5">
        <options>
          <option name="run-build-if-dependency-failed" value="RUN_ADD_PROBLEM" />
          <option name="take-started-build-with-same-revisions" value="true" />
          <option name="take-successful-builds-only" value="true" />
        </options>
      </depend-on>
    </dependencies>
    <cleanup />
  </settings>
</build-type>


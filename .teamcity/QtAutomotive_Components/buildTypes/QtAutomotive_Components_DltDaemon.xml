<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="78217e60-64ee-4737-902e-3d0738d452cd" xsi:noNamespaceSchemaLocation="http://www.jetbrains.com/teamcity/schemas/10.0/project-config.xsd">
  <name>dlt-daemon</name>
  <description />
  <settings>
    <options>
      <option name="artifactRules" value="%system.teamcity.build.tempDir%/*.deb&#xA;%system.teamcity.build.tempDir%/install/=&gt;dlt.tar.gz" />
    </options>
    <parameters />
    <build-runners>
      <runner id="RUNNER_83" name="Get version" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/bin/bash
echo "##teamcity[buildNumber '`git describe --abbrev=7`']"]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_90" name="Configure" type="jetbrains-cmake-conf">
        <parameters>
          <param name="teamcity.build.workingDir" value="%system.teamcity.build.tempDir%/build/" />
          <param name="teamcity.step.mode" value="default" />
          <param name="ui-jetbrains-cmake-conf-additional-cmd-params" value="-DCMAKE_INSTALL_PREFIX=/usr" />
          <param name="ui-jetbrains-cmake-conf-cmake-build-type" value="Default" />
          <param name="ui-jetbrains-cmake-conf-developer-warnings" value="true" />
          <param name="ui-jetbrains-cmake-conf-source-path" value="%system.teamcity.build.checkoutDir%" />
        </parameters>
      </runner>
      <runner id="RUNNER_89" name="build" type="jetbrains-cmake-build">
        <parameters>
          <param name="teamcity.build.workingDir" value="%system.teamcity.build.tempDir%/build/" />
          <param name="teamcity.step.mode" value="default" />
          <param name="ui-jetbrains-cmake-build-build-target" value="all" />
          <param name="ui-jetbrains-cmake-build-clean-before-build" value="true" />
          <param name="ui-jetbrains-cmake-build-native-tool-params" value="DESTDIR=%system.teamcity.build.tempDir%/install/" />
        </parameters>
      </runner>
      <runner id="RUNNER_91" name="install" type="jetbrains-cmake-build">
        <parameters>
          <param name="teamcity.build.workingDir" value="%system.teamcity.build.tempDir%/build/" />
          <param name="teamcity.step.mode" value="default" />
          <param name="ui-jetbrains-cmake-build-build-target" value="install" />
          <param name="ui-jetbrains-cmake-build-clean-before-build" value="true" />
          <param name="ui-jetbrains-cmake-build-native-tool-params" value="DESTDIR=%system.teamcity.build.tempDir%/install/" />
        </parameters>
      </runner>
      <runner id="RUNNER_84" name="Package" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/bin/bash
mkdir DEBIAN
cat > DEBIAN/conffiles  << EOF
/etc/dlt.conf
/etc/dlt-system.conf
/etc/dlt-dbus.conf
/etc/dlt_gateway.conf
/etc/dlt-kpi.conf
EOF
export VNUMBER=`echo %env.BUILD_NUMBER%|sed 's/^v//'`
cat > DEBIAN/control << EOF
Package: dlt-daemon
Version: $VNUMBER
Architecture: amd64
Maintainer: Nikolay Zamotaev
Installed-Size: 3900
Depends: libc6 (>= 2.15), libdbus-1-3 (>= 1.1.1), zlib1g (>= 1:1.1.4), libgcrypt20 (>= 1.6.5), libgpg-error0 (>= 1.21), libpcre3 (>= 2:8.38), libsystemd0 (>=229)
Section: devel
Priority: optional
Homepage: https://github.com/GENIVI/dlt-daemon
Description: GENIVI DLT
 Logger for Automotive applications
EOF
dpkg-deb -b . ../
rm -rf DEBIAN]]></param>
          <param name="teamcity.build.workingDir" value="%system.teamcity.build.tempDir%/install/" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="QtAutomotive_Components_GithubComGeniviDltDaemonGit" />
    </vcs-settings>
    <requirements>
      <contains id="RQ_55" name="teamcity.agent.jvm.os.arch" value="amd64" />
    </requirements>
    <build-triggers />
    <build-extensions>
      <extension id="swabra" type="swabra">
        <parameters>
          <param name="swabra.enabled" value="swabra.before.build" />
        </parameters>
      </extension>
      <extension id="perfmon" type="perfmon">
        <parameters />
      </extension>
    </build-extensions>
    <cleanup />
  </settings>
</build-type>


<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="46f42e3c-da8e-475f-a076-01e65dac8cfe" xsi:noNamespaceSchemaLocation="http://www.jetbrains.com/teamcity/schemas/10.0/project-config.xsd">
  <name>Qt WebEngine</name>
  <description>Qt WebEngine module</description>
  <settings>
    <parameters />
    <build-runners>
      <runner id="RUNNER_144" name="Build tagging" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/bin/bash
echo "##teamcity[buildNumber '`git describe --abbrev=7`']"]]></param>
          <param name="teamcity.build.workingDir" value="sources" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_145" name="Docker" type="simpleRunner">
        <parameters>
          <param name="script.content" value="./run.sh %system.teamcity.build.tempDir% `pwd`/../../../../ %teamcity.build.vcs.branch.QtAutomotive_Components_HttpsCodeQtIoQtQtwebengineGit%" />
          <param name="teamcity.build.workingDir" value="Docker/QtAutomotive/Components/QtWebEngine" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="GithubComNzamotaevTeamCityDockerScriptsGit">
        <checkout-rule rule="+:. =&gt; Docker" />
      </vcs-entry-ref>
      <vcs-entry-ref root-id="QtAutomotive_Components_HttpsCodeQtIoQtQtwebengineGit">
        <checkout-rule rule="+:. =&gt; sources" />
      </vcs-entry-ref>
    </vcs-settings>
    <requirements>
      <equals id="RQ_83" name="system.ubuntu.version" value="16.04" />
      <equals id="RQ_84" name="teamcity.agent.jvm.os.arch" value="amd64" />
    </requirements>
    <build-triggers />
    <build-extensions>
      <extension id="swabra" type="swabra">
        <parameters />
      </extension>
      <extension id="perfmon" type="perfmon">
        <parameters />
      </extension>
      <extension id="jetbrains.agent.free.space" type="jetbrains.agent.free.space">
        <parameters>
          <param name="free-space-fail-start" value="true" />
          <param name="free-space-work" value="3gb" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_53" type="BuildFailureOnMetric">
        <parameters>
          <param name="anchorBuild" value="lastSuccessful" />
          <param name="metricKey" value="VisibleArtifactsSize" />
          <param name="metricThreshold" value="1000" />
          <param name="metricUnits" value="metricUnitsDefault" />
          <param name="moreOrLess" value="less" />
          <param name="withBuildAnchor" value="false" />
        </parameters>
      </extension>
    </build-extensions>
    <cleanup />
  </settings>
</build-type>


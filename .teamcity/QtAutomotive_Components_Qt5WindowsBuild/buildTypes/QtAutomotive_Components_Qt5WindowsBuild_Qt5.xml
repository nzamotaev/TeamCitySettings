<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="5eadd90c-7b29-4029-a10b-053e3dafde2a" xsi:noNamespaceSchemaLocation="http://www.jetbrains.com/teamcity/schemas/10.0/project-config.xsd">
  <name>Qt5</name>
  <description />
  <settings>
    <options>
      <option name="artifactRules" value="+:%system.teamcity.build.tempDir%/_install_/ =&gt; qt.tar.gz" />
    </options>
    <disabled-settings>
      <setting-ref ref="RUNNER_104" />
      <setting-ref ref="vcsTrigger" />
    </disabled-settings>
    <parameters>
      <param name="debug_release" value="" spec="select label_3='release' display='normal' description='debug_release switch' data_1='-debug' label_1='debug' data_3=''" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_119" name="Build tagging" type="simpleRunner">
        <parameters>
          <param name="script.content" value="echo &quot;##teamcity[buildNumber '`git describe --first-parent --abbrev=7`']&quot;" />
          <param name="teamcity.build.workingDir" value="sources" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_104" name="Docker" type="simpleRunner">
        <parameters>
          <param name="script.content" value="./run.sh %system.teamcity.build.tempDir% `pwd`/../../../../sources/ %teamcity.build.vcs.branch.QtAutomotive_Components_CodeQtIoQtQt5git% %debug_release%" />
          <param name="teamcity.build.workingDir" value="Docker/QtAutomotive/Components/Qt5" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_146" name="" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[set
git submodule foreach --recursive git reset --hard
perl init-repository -f --module-subset=default,-qtwebkit,-qtwebkit-examples,-qtwebengine,-qtdocgallery,-qtpim]]></param>
          <param name="teamcity.build.workingDir" value="sources" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_147" name="" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[REM Edit this location to point to the source code of Qt
SET _ROOT=..\sources\

SET PATH=%%_ROOT%%\qtbase\bin;%%_ROOT%%\gnuwin32\bin;%%PATH%%
SET PATH=%%_ROOT%%\qtrepotools\bin;%%PATH%%
SET PATH=C:\OpenSSL-Win32\bin;%%PATH%%

REM When compiling with ICU, uncomment the lines below and change <icupath> appropriately:
REM SET INCLUDE=<icupath>\include;%%INCLUDE%%
REM SET LIB=<icupath>\lib;%%LIB%%
REM SET PATH=<icupath>\lib;%%PATH%%
SET _ROOT=
SET QMAKE_MAKE=make.exe

..\sources\configure.bat -opensource -nomake examples -nomake tests -platform win32-g++ -make-tool make -confirm-license -opengl desktop]]></param>
          <param name="teamcity.build.workingDir" value="build" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="QtAutomotive_Components_CodeQtIoQtQt5git">
        <checkout-rule rule="+:. =&gt; sources" />
      </vcs-entry-ref>
    </vcs-settings>
    <requirements>
      <equals id="RQ_71" name="env.WRAPPER_OS" value="windows" />
    </requirements>
    <build-triggers>
      <build-trigger id="vcsTrigger" type="vcsTrigger">
        <parameters>
          <param name="branchFilter"><![CDATA[+:*
-:wip/*
-:5.6
-:5.7
-:5.9.7
-:5.10]]></param>
          <param name="quietPeriodMode" value="DO_NOT_USE" />
          <param name="triggerRules"><![CDATA[+:root=QtAutomotive_Components_CodeQtIoQtQt5git:**
+:root=GithubComNzamotaevTeamCityDockerScriptsGit:QtAutomotive/Components/Qt5/**
-:root=GithubComNzamotaevTeamCityDockerScriptsGit:**]]></param>
        </parameters>
      </build-trigger>
    </build-triggers>
    <build-extensions>
      <extension id="swabra" type="swabra">
        <parameters>
          <param name="swabra.enabled" value="swabra.before.build" />
          <param name="swabra.strict" value="true" />
        </parameters>
      </extension>
      <extension id="perfmon" type="perfmon">
        <parameters />
      </extension>
      <extension id="jetbrains.agent.free.space" type="jetbrains.agent.free.space">
        <parameters>
          <param name="free-space-work" value="15gb" />
        </parameters>
      </extension>
      <extension id="BUILD_EXT_18" type="BuildFailureOnMetric">
        <parameters>
          <param name="anchorBuild" value="lastSuccessful" />
          <param name="metricKey" value="VisibleArtifactsSize" />
          <param name="metricThreshold" value="1000000" />
          <param name="metricUnits" value="metricUnitsDefault" />
          <param name="moreOrLess" value="less" />
          <param name="withBuildAnchor" value="false" />
        </parameters>
      </extension>
    </build-extensions>
    <cleanup />
  </settings>
</build-type>


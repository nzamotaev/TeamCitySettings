<?xml version="1.0" encoding="UTF-8"?>
<build-type xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" uuid="5f4081f8-b6ad-4151-bfa9-4411c1c737e8" xsi:noNamespaceSchemaLocation="http://www.jetbrains.com/teamcity/schemas/10.0/project-config.xsd">
  <name>Neptune3-ui android control application</name>
  <description />
  <settings>
    <options>
      <option name="artifactRules" value="%system.teamcity.build.tempDir%/install/**/*.apk" />
    </options>
    <parameters>
      <param name="BUILDARCH" value="armv7" spec="select data_5='x86' label_3='arm64' display='normal' label='Phone architecture' data_1='armv7' label_1='arm' data_3='arm64_v8a'" />
      <param name="QT_VERSION" value="5.15.0" spec="select display='normal' label='Qt version' data_2='5.14.2' data_1='5.15.0'" />
      <param name="env.ANDROID_SDK_ROOT" value="%env.ANDROID_HOME%" spec="text display='normal' readOnly='true' validationMode='any'" />
    </parameters>
    <build-runners>
      <runner id="RUNNER_129" name="Build tagging" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/bin/bash
echo "##teamcity[buildNumber '`git describe --tags --abbrev=7 --always`']"]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_121" name="Qmake configuration" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/bin/bash
set -e
if [ -x %env.ANDROID_QT_SDK%/%QT_VERSION%/android_%BUILDARCH%/bin/qmake  ] ; then 
    %env.ANDROID_QT_SDK%/%QT_VERSION%/android_%BUILDARCH%/bin/qmake %system.teamcity.build.checkoutDir%/settings_app_android.pro -spec android-clang
else
    %env.ANDROID_QT_SDK%/%QT_VERSION%/android/bin/qmake %system.teamcity.build.checkoutDir%/settings_app_android.pro -spec android-clang
fi]]></param>
          <param name="teamcity.build.workingDir" value="%system.teamcity.build.tempDir%/build/" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_123" name="Building C++ part" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[mkdir -p ../install
make qmake_all
make -j $(nproc)
make INSTALL_ROOT=`pwd`/../install/ install]]></param>
          <param name="teamcity.build.workingDir" value="%system.teamcity.build.tempDir%/build/" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_124" name="Configuring android build" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[#!/bin/bash
JSON_FILE=`find ./ -name \*-settings.json`
if [ -x %env.ANDROID_QT_SDK%/%QT_VERSION%/android_%BUILDARCH%/bin/androiddeployqt ]; then
    %env.ANDROID_QT_SDK%/%QT_VERSION%/android_%BUILDARCH%/bin/androiddeployqt --input "${JSON_FILE}" --android-platform android-28 --output ../install --gradle
else
    %env.ANDROID_QT_SDK%/%QT_VERSION%/android/bin/androiddeployqt --input "${JSON_FILE}" --android-platform android-28 --output ../install --gradle
fi]]></param>
          <param name="teamcity.build.workingDir" value="%system.teamcity.build.tempDir%/build/" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_131" name="Patch AndroidManifest.xml" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[cat > %system.teamcity.build.tempDir%/manifest.py << EOF
import sys
from xml.etree.ElementTree import parse
filename = sys.argv[1]                                                                              
versionName = sys.argv[2]                                                                           
versionCode = sys.argv[3]
doc = parse(filename)
for atype in doc.iter():
    if atype.tag == "manifest":
        atype.set("{http://schemas.android.com/apk/res/android}versionName",versionName)
        atype.set("{http://schemas.android.com/apk/res/android}versionCode",versionCode)
doc.write(filename, xml_declaration=True)
EOF

python %system.teamcity.build.tempDir%/manifest.py AndroidManifest.xml "%build.number%" "%build.counter%"]]></param>
          <param name="teamcity.build.workingDir" value="%system.teamcity.build.tempDir%/install/" />
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_130" name="gradle build" type="gradle-runner">
        <parameters>
          <param name="teamcity.build.workingDir" value="%system.teamcity.build.tempDir%/install/" />
          <param name="teamcity.coverage.emma.include.source" value="true" />
          <param name="teamcity.coverage.emma.instr.parameters" value="-ix -*Test*" />
          <param name="teamcity.coverage.idea.includePatterns" value="*" />
          <param name="teamcity.coverage.jacoco.patterns" value="+:*" />
          <param name="teamcity.step.mode" value="default" />
          <param name="ui.gradleRUnner.gradle.build.file" value="build.gradle" />
          <param name="ui.gradleRunner.gradle.tasks.names" value="build" />
          <param name="ui.gradleRunner.gradle.wrapper.useWrapper" value="true" />
        </parameters>
      </runner>
      <runner id="RUNNER_126" name="Upload application to testfairy" type="simpleRunner">
        <parameters>
          <param name="script.content"><![CDATA[find "%system.teamcity.build.tempDir%/install/" -name \*-debug.apk|while read i;do
    curl -s http://app.testfairy.com/api/upload -F comment="`git log --pretty=format:\"%%h %%ad | %%s%%d [%%an]\" --date=short |head -n 1`" -F api_key=f8c0bc19e03df2b1e88964a64aabe6bcfe8a73af -F apk_file=@$i
done]]></param>
          <param name="teamcity.step.mode" value="default" />
          <param name="use.custom.script" value="true" />
        </parameters>
      </runner>
    </build-runners>
    <vcs-settings>
      <vcs-entry-ref root-id="QtAutomotive_Components_HttpsGitLfsQtIoGerritTritonUiGit" />
    </vcs-settings>
    <requirements>
      <equals id="RQ_64" name="teamcity.agent.jvm.os.arch" value="amd64" />
      <exists id="RQ_65" name="env.ANDROID_HOME" />
      <exists id="RQ_74" name="env.ANDROID_NDK_ROOT" />
      <exists id="RQ_75" name="env.ANDROID_QT_SDK" />
    </requirements>
    <build-triggers>
      <build-trigger id="vcsTrigger" type="vcsTrigger">
        <parameters>
          <param name="branchFilter"><![CDATA[+:refs/changes/*
+:refs/heads/5.*
+:refs/heads/dev]]></param>
          <param name="groupCheckinsByCommitter" value="true" />
          <param name="perCheckinTriggering" value="true" />
          <param name="quietPeriodMode" value="USE_DEFAULT" />
          <param name="triggerRules"><![CDATA[+:.
-:doc/**
-:dev/**
-:apps/**
-:comment=.*WIP.*:**
-:user=abetouni:**]]></param>
        </parameters>
      </build-trigger>
      <build-trigger id="TRIGGER_14" type="buildDependencyTrigger">
        <parameters>
          <param name="afterSuccessfulBuildOnly" value="true" />
          <param name="branchFilter" value="+:*" />
          <param name="dependsOn" value="QtAutomotive_Components_TritonUiForNuc" />
        </parameters>
      </build-trigger>
    </build-triggers>
    <build-extensions>
      <extension id="swabra" type="swabra">
        <parameters>
          <param name="swabra.enabled" value="swabra.before.build" />
          <param name="swabra.strict" value="true" />
        </parameters>
      </extension>
      <extension id="perfmon" type="perfmon">
        <parameters />
      </extension>
    </build-extensions>
    <dependencies>
      <depend-on sourceBuildTypeId="QtAutomotive_Components_TritonUiForNuc">
        <options>
          <option name="run-build-if-dependency-failed" value="RUN_ADD_PROBLEM" />
          <option name="run-build-if-dependency-failed-to-start" value="RUN_ADD_PROBLEM" />
          <option name="take-started-build-with-same-revisions" value="true" />
          <option name="take-successful-builds-only" value="true" />
        </options>
      </depend-on>
    </dependencies>
    <cleanup>
      <policy type="daysAndBuilds" cleanup-level="ARTIFACTS">
        <parameters>
          <param name="artifactPatterns" value="+:*/**" />
          <param name="keepBuilds.count" value="10" />
          <param name="keepDays.count" value="30" />
        </parameters>
      </policy>
    </cleanup>
  </settings>
</build-type>

